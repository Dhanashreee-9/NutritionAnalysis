{"version":3,"sources":["Components/MainPart/Button.js","Components/Output/Output.js","Components/Error/ErrorMessage.js","App.js","reportWebVitals.js","index.js"],"names":["Button","oninput","onClicking","clickBut","className","onChange","onClick","type","window","location","reload","Output","data","console","log","calories","id","colSpan","Math","ceil","totalNutrients","FAT","quantity","unit","totalDaily","FASAT","CHOLE","NA","CHOCDF","PROCNT","VITD","CA","FE","K","ErrorMessage","App","onInputting","event","setState","input","target","value","a","ingredient","state","fetchUsersWithFetchAPI","fetch","then","response","json","this","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f28c54b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Button.css';\r\n\r\nconst Button =({oninput,onClicking,clickBut})=>{\r\n    return(\r\n        \r\n        <div className=\"input-form\">\r\n        <div className=\"text\">\r\n            <h4>Nutrition Analysis</h4>\r\n            <p>Enter an ingredient list for what you are cooking,\r\n            like<span>\"1 cup rice, 10 oz chickpeas\",</span>etc.  Enter each ingredient on a new line.</p>\r\n        </div>\r\n        <div className=\"input-field\">\r\n        <textarea onChange={oninput}></textarea>\r\n        </div>\r\n        <div className=\"btn\">\r\n            <button onClick={onClicking}>Analyze</button>\r\n            {clickBut ?\r\n                <button type=\"reset\" onClick={() => window.location.reload(false)}>New Recipe</button>:\r\n                ''}\r\n            \r\n        </div>\r\n        \r\n         \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport './Output.css';\r\n\r\nfunction Output({data}) {\r\n    console.log(data)\r\n    return (\r\n        <div className=\"output\">\r\n        { data.calories !== 0 ?\r\n\r\n            <section className=\"performance-facts\" id=\"performance-facts\">\r\n            <div className=\"performance-facts__header\">\r\n                <h1 className=\"performance-facts__title\">Nutrition Facts</h1>\r\n                <p><span id=\"lnumser\">0</span> servings per container</p>\r\n            </div>\r\n            <table className=\"performance-facts__table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th colSpan=\"3\" className=\"amps\">Amount Per Serving</th>\r\n                    </tr>\r\n                </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <th colSpan=\"2\" id=\"lkcal-val-cal\"><b>Calories</b></th>\r\n                    <td className=\"nob\">{data.calories}</td>\r\n                </tr>\r\n                <tr className=\"thick-row\">\r\n                    <td colSpan=\"3\" className=\"small-info\"><b>% Daily Value*</b></td>\r\n                </tr>\r\n                <tr>\r\n                    <th colSpan=\"2\"><b>Total Fat</b> {Math.ceil(data.totalNutrients.FAT.quantity)} {data.totalNutrients.FAT.unit}</th>\r\n                    <td><b> {Math.ceil(data.totalDaily.FAT.quantity)}{data.totalDaily.FAT.unit}</b></td>\r\n                </tr>\r\n                <tr>\r\n                    <td className=\"blank-cell\"></td>\r\n                    <th>Saturated Fat {Math.ceil(data.totalNutrients.FASAT.quantity)} {data.totalNutrients.FASAT.unit}</th>\r\n                    <td><b>{Math.ceil(data.totalDaily.FASAT.quantity)}{data.totalDaily.FASAT.unit}</b></td>\r\n                </tr>\r\n                <tr>\r\n                    <td className=\"blank-cell\"></td>\r\n                    <th>Trans Fat -</th>\r\n                    <td></td>\r\n                </tr>\r\n                <tr>\r\n                    <th colSpan=\"2\"><b>Cholesterol</b> {Math.ceil(data.totalNutrients.CHOLE.quantity)} {data.totalNutrients.CHOLE.unit}</th>\r\n                    <td><b>{Math.ceil(data.totalDaily.CHOLE.quantity)} {data.totalDaily.CHOLE.unit}</b></td>\r\n                </tr>\r\n                <tr>\r\n                    <th colSpan=\"2\"><b>Sodium</b> {Math.ceil(data.totalNutrients.NA.quantity)} {data.totalNutrients.NA.unit}</th>\r\n                    <td><b>{Math.ceil(data.totalDaily.NA.quantity)} {data.totalDaily.NA.unit}</b></td>\r\n                </tr>\r\n                <tr>\r\n                    <th colSpan=\"2\"><b>Total Carbohydrate</b> {Math.ceil(data.totalNutrients.CHOCDF.quantity)} {data.totalNutrients.CHOCDF.unit}</th>\r\n                    <td><b>{Math.ceil(data.totalDaily.CHOCDF.quantity)} {data.totalDaily.CHOCDF.unit}</b></td>\r\n                </tr>\r\n                <tr>\r\n                    <td className=\"blank-cell\"></td>\r\n                    <th>Dietary Fiber -</th>\r\n                    <td><b>-</b></td>\r\n                </tr>\r\n                <tr>\r\n                    <td className=\"blank-cell\"></td>\r\n                    <th>Total Sugars -</th>\r\n                    <td></td>\r\n                </tr>\r\n                <tr>\r\n                    <td className=\"blank-cell\"></td>\r\n                    <th>Includes - Added Sugars</th>\r\n                    <td></td>\r\n                </tr>\r\n                <tr className=\"thick-end\">\r\n                    <th colSpan=\"2\"><b>Protein</b> {Math.ceil(data.totalNutrients.PROCNT.quantity)} {data.totalNutrients.PROCNT.unit}</th>\r\n                    <td><b>{Math.ceil(data.totalDaily.PROCNT.quantity)} {data.totalDaily.PROCNT.unit}</b></td>\r\n                </tr>\r\n            </tbody>\r\n    </table>\r\n            <table className=\"performance-facts__table--grid\">\r\n                <tbody>\r\n                    <tr>\r\n                        <th>Vitamin D {Math.ceil(data.totalNutrients.VITD.quantity)} {data.totalNutrients.VITD.unit}</th>\r\n                        <td><b>{Math.ceil(data.totalDaily.VITD.quantity)} {data.totalDaily.VITD.unit}</b></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Calcium {Math.ceil(data.totalNutrients.CA.quantity)} {data.totalNutrients.CA.unit}</th>\r\n                        <td><b>{Math.ceil(data.totalDaily.CA.quantity)} {data.totalDaily.CA.unit}</b></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Iron {Math.ceil(data.totalNutrients.FE.quantity)} {data.totalNutrients.FE.unit}</th>\r\n                        <td><b>{Math.ceil(data.totalDaily.FE.quantity)} {data.totalDaily.FE.unit}</b></td>\r\n                    </tr>\r\n                    <tr className=\"thin-end\">\r\n                        <th>Potassium {Math.ceil(data.totalNutrients.K.quantity)} {data.totalNutrients.K.unit}</th>\r\n                        <td><b>{Math.ceil(data.totalDaily.K.quantity)} {data.totalDaily.K.unit}</b></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n           <p className=\"small-info\" id=\"small-nutrition-info\">*Percent Daily Values are based on a 2000 calorie diet</p>\r\n</section>\r\n        :\r\n         <div className=\"input-error\">\r\n             <p>We cannot calculate the data for you.Provide correct input data.\r\n              </p>\r\n         </div>\r\n        }\r\n           \r\n        \r\n        </div>\r\n    )\r\n} \r\n\r\nexport default Output\r\n","import React from 'react';\r\nimport './ErrorMessage.css'\r\n\r\nfunction ErrorMessage() {\r\n    return (\r\n        <div className=\"error-message\"><h2>Give some input </h2></div>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage","import './App.css';\nimport Button from './Components/MainPart/Button';\nimport Output from './Components/Output/Output';\nimport ErrorMessage from './Components/Error/ErrorMessage';\nimport React from 'react';\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state={\n      clickBut: false,\n       input:'',\n       ingredient:'',\n       data:{},\n    }\n  }\n\n  onInputting=(event)=>{\n    this.setState({input : event.target.value })\n    console.log(\"input\");\n  }\nonClicking=async()=>{\n      await this.setState({ingredient : this.state.input})\n      await this.fetchUsersWithFetchAPI();\n  }\n  fetchUsersWithFetchAPI = () => {\n    fetch(`https://api.edamam.com/api/nutrition-data?app_id=7dbb41f5&app_key=\n           9d8501ca996ff6c6c5da60a19cda6a7f&ingr=${this.state.ingredient}`)\n        .then(response => response.json())\n        .then((data)=> {\n            this.setState({data: data, clickBut: true});\n               console.log(data);\n          })\n      \n};\n\n  \n  render(){\n    return(\n      <div>\n        <div className=\"text-block\"> \n        <div className=\"col-75\"> \n           <Button onClicking={this.onClicking}oninput ={this.onInputting}  clickBut={this.state.clickBut}/>\n           {(this.state.clickBut && this.state.ingredient !== '') ?\n            <Output data={this.state.data}/> \n          :((this.state.clickBut && this.state.ingredient === '')?<ErrorMessage/>: '')}\n        </div>\n         </div>\n         \n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport tachyons from 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}